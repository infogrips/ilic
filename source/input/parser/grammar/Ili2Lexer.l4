//
// start of LEXER
//

lexer grammar Ili2Lexer;

//
// whitespace & comments
//

WS
   : (' ' | '\t' | '\f' | ('\r'? '\n'))+
   -> skip;

SL_COMMENT
   : '!!'
   (~'@')
   (~('\n'|'\r'|'\uFFFF'))*
   ('\n' | ('\r' ( '\n' )?)|'\uFFFF')
   -> skip
  ;
  
ILI_DOC
    : '/**' .*? '*/' -> skip
    ;

ILI_OPTION
    : '!!@' .*? ('\n' | ('\r' ( '\n' )?)|'\uFFFF') -> skip
    ;
    
ILI_BLOCKCOMMENT
    : '/*' .*? '*/' -> skip
    ;
    
//
// simple tokens
//

INTERLIS
   : 'INTERLIS'
   ;

ILI23
   : '2.3'
   ;

ILI24
   : '2.4'
   ;

CONTRACTED
   : 'CONTRACTED'
   ;

REFSYSTEM
   : 'REFSYSTEM'
   ;

SYMBOLOGY
   : 'SYMBOLOGY'
   ;

TYPE
   : 'TYPE'
   ;

MODEL
   : 'MODEL'
   ;

END
   : 'END'
   ;

VERSION
   : 'VERSION'
   ;

NOINCREMENTALTRANSFER
   : 'NOINCREMENTALTRANSFER'
   ;

TRANSLATION
   : 'TRANSLATION'
   ;

OF
   : 'OF'
   ;

ATT
   : 'AT'
   ;
   
CHARSET
   : 'CHARSET'
   ;

XMLNS
   : 'XMLNS'
   ;

IMPORTS
   : 'IMPORTS'
   ;

UNQUALIFIED
   : 'UNQUALIFIED'
   ;

TOPIC
   : 'TOPIC'
   ;

DEPENDS
   : 'DEPENDS'
   ;

ON
   : 'ON'
   ;

AS
   : 'AS'
   ;

VIEW
   : 'VIEW'
   ;

EXTENDS
   : 'EXTENDS'
   ;

BASKET
   : 'BASKET'
   ;

OID
   : 'OID'
   ;

CLASS
   : 'CLASS'
   ;

ABSTRACT
   : 'ABSTRACT'
   ;

EXTENDED
   : 'EXTENDED'
   ;

FINAL
   : 'FINAL'
   ;

TRANSIENT
   : 'TRANSIENT'
   ;

CONTINUOUS
   : 'CONTINUOUS'
   ;

SUBDIVISION
   : 'SUBDIVISION'
   ;

NO
   : 'NO'
   ;

ATTRIBUTE
   : 'ATTRIBUTE'
   ;

TEXT
   : 'TEXT'
   ;

DATE
   : 'DATE'
   ;

TIMEOFDAY
   : 'TIMEOFDAY'
   ;

DATETIME
   : 'DATETIME'
   ;

LPAREN
   : '('
   ;

RPAREN
   : ')'
   ;

LBRACE
   : '['
   ;

RBRACE
   : ']'
   ;

LCURLY
   : '{'
   ;

RCURLY
   : '}'
   ;

STAR
   : '*'
   ;

SLASH
   : '/'
   ;

BACKSLASH
   : '\\'
   ;

PERCENT
   : '%'
   ;

AT
   : '@'
   ;

HASH
   : '#'
   ;

TILDE
   : '~'
   ;

LESS
   : '<'
   ;

LESSEQUAL
   : '<='
   ;

IMPL
   : '=>'
   ;

GREATERGREATER
   : '>>'
   ;
   
GREATER
   : '>'
   ;

GREATEREQUAL
   : '>='
   ;

SEMI
   : ';'
   ;

EQUAL
   : '='
   ;

EQUALEQUAL
   : '=='
   ;

LESSGREATER
   : '<>'
   ;

NOTEQUAL
   : '!='
   ;

COLONEQUAL
   : ':='
   ;

DOT
   : '.'
   ;

DOTDOT
   : '..'
   ;

COLON
   : ':'
   ;

COMMA
   : ','
   ;

LARROW
   : '<-'
   ;

RARROW
   : '->'
   ;
   
PLUS
   : '+'
   ;

MINUS
   : '-'
   ;

AGGREGATE
   : '-<>'
   ;

ASSOCIATE
   : '--'
   ;

COMPOSITE
   : '-<#>'
   ;

STRUCTURE
   : 'STRUCTURE'
   ;

PARAMETER
   : 'PARAMETER'
   ;

MANDATORY
   : 'MANDATORY'
   ;

GENERICS
   : 'GENERICS'
   ;

DEFERRED
   : 'DEFERRED'
   ;

CONTEXT
   : 'CONTEXT'
   ;

MULTICOORD
   : 'MULTICOORD'
   ;

MULTIPOLYLINE
   : 'MULTIPOLYLINE'
   ;

MULTISURFACE
   : 'MULTISURFACE'
   ;

MULTIAREA
   : 'MULTIAREA'
   ;

BAG
   : 'BAG'
   ;

LIST
   : 'LIST'
   ;

REFERENCE
   : 'REFERENCE'
   ;

TO
   : 'TO'
   ;

ANYCLASS
   : 'ANYCLASS'
   ;

RESTRICTION
   : 'RESTRICTION'
   ;

ASSOCIATION
   : 'ASSOCIATION'
   ;

DERIVED
   : 'DERIVED'
   ;

EXTERNAL
   : 'EXTERNAL'
   ;

FROM
   : 'FROM'
   ;

UNDEFINED
   : 'UNDEFINED'
   ;
   
MTEXT
   : 'MTEXT'
   ;

ALL
   : 'ALL'
   ;
   
CIRCULAR
   : 'CIRCULAR'
   ;
   
OTHERS
   : 'OTHERS'
   ;

NUMERIC
   : 'NUMERIC'
   ;
   
CLOCKWISE
   : 'CLOCKWISE'
   ;

COUNTERCLOCKWISE
   : 'COUNTERCLOCKWISE'
   ;

CARDINALITY
   : 'CARDINALITY'
   ;

OR
   : 'OR'
   ;
   
HIDING
   : 'HIDING'
   ;

ORDERED
   : 'ORDERED'
   ;
   
ILIDOMAIN
   : 'DOMAIN'
   ;

PI
   : 'PI'
   ;
   
LNBASE
   : 'LNBASE'
   ;

FORMAT
   : 'FORMAT'
   ;

INHERIT
   : 'INHERIT'
   ;
   
COORD
   : 'COORD'
   ;
   
ROTATION
   : 'ROTATION'
   ;

ANY
   : 'ANY'
   ;

BLACKBOX
   : 'BLACKBOX'
   ;

XML
   : 'XML'
   ;
   
BINARY
   : 'BINARY'
   ;
   
DIRECTED
   : 'DIRECTED'
   ;

POLYLINE
   : 'POLYLINE'
   ;
   
SURFACE
   : 'SURFACE'
   ;
   
AREA
   : 'AREA'
   ;

WITH
   : 'WITH'
   ;

STRAIGHTS
   : 'STRAIGHTS'
   ;
   
ARCS
   : 'ARCS'
   ;
   
VERTEX
   : 'VERTEX'
   ;
   
WITHOUT
   : 'WITHOUT'
   ;
   
OVERLAPS
   : 'OVERLAPS'
   ;
   
LINE
   : 'LINE'
   ;
   
ATTRIBUTES
   : 'ATTRIBUTES'
   ;
   
FORM
   : 'FORM'
   ;
   
UNIT
   : 'UNIT'
   ;
   
FUNCTION
   : 'FUNCTION'
   ;
   
SIGN
   : 'SIGN'
   ;
   
OBJECTS
   : 'OBJECTS'
   ;

METAOBJECT
   : 'METAOBJECT'
   ;

CONSTRAINT
   : 'CONSTRAINT'
   ;
   
CONSTRAINTS
   : 'CONSTRAINTS'
   ;
   
EXISTENCE
   : 'EXISTENCE'
   ;
   
REQUIRED
   : 'REQUIRED'
   ;
   
IN
   : 'IN'
   ;

UNIQUE
   : 'UNIQUE'
   ;
   
WHERE
   : 'WHERE'
   ;

LOCAL
   : 'LOCAL'
   ;
   
SET
   : 'SET'
   ;

AND
   : 'AND'
   ;
   
NOT
   : 'NOT'
   ;

BASED
   : 'BASED'
   ;

BASE
   : 'BASE'
   ;

INHERITANCE
   : 'INHERITANCE'
   ;

DEFINED
   : 'DEFINED'
   ;

INSPECTION
   : 'INSPECTION'
   ;

THIS
   : 'THIS'
   ;

THISAREA
   : 'THISAREA'
   ;

THATAREA
   : 'THATAREA'
   ;

PARENT
   : 'PARENT'
   ;

FIRST
   : 'FIRST'
   ;

LAST
   : 'LAST'
   ;

AGGREGATES
   : 'AGGREGATES'
   ;

OBJECT
   : 'OBJECT'
   ;

ENUMVAL
   : 'ENUMVAL'
   ;

ENUMTREEVAL
   : 'ENUMTREEVAL'
   ;

PROJECTION
   : 'PROJECTION'
   ;

JOIN
   : 'JOIN'
   ;

ILINULL
   : 'NULL'
   ;

UNION
   : 'UNION'
   ;

AGGREGATION
   : 'AGGREGATION'
   ;

BY
   : 'BY'
   ;

GRAPHIC
   : 'GRAPHIC'
   ;

ACCORDING
   : 'ACCORDING'
   ;

WHEN
   : 'WHEN'
   ;

ANYSTRUCTURE
   : 'ANYSTRUCTURE'
   ;
   
TRANSFER
   : 'TRANSFER'
   ;
   
//
// complex tokens
//

EXPLANATION
    : '//' .*? '//'
    ;

ESC
   : '\\' ( '"' | '\\' | 'u' HEXDIGIT HEXDIGIT HEXDIGIT HEXDIGIT )
   ;

STRING
   : '"' ( ESC | ~('"' | '\\'))* '"'
   ;

fragment DIGIT
   : '0' .. '9'
   ;

fragment LETTER
   :   'a' .. 'z' | 'A' .. 'Z'
   ;

POSNUMBER
   : (DIGIT)+
   ;

NUMBER
   : ('+'|'-')? POSNUMBER
   ;

DEC
   : NUMBER DOT POSNUMBER SCALING?
   ;

SCALING
   : ('E'|'e') NUMBER
   ;

DECIMAL
   : (('+' |'-')? '0' DOT (('1'..'9' (POSNUMBER)?)
   | ('0')+) ('e' | 'E'))
   | NUMBER (DOT POSNUMBER)?
   ;      

fragment HEXDIGIT
   : DIGIT
   | [a-f]
   | [A-F]
   ;

HEXNUMBER
   : '0' ('x' | 'X') (HEXDIGIT)+
   ;

NAME
   : LETTER (LETTER | '_' | DIGIT)*
   ;
